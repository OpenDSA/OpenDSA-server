{
"usercode":"import java.io.FileWriter;\nimport java.io.FileReader;\nimport java.io.BufferedWriter;\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.Writer;\nimport java.io.PrintWriter;\n\n/* *** ODSATag: Link *** */\nclass Link {\n  private Object e;\n  private Link n;\n\n  // Constructors\n  Link(Object ine, Link inn) { e = ine; n = inn; }\n  Link(Link inn) { e = null; n = inn; }\n\n  public  Object element() { return e; }           // Return the value\n  public void setelement(Object ine) { e = ine; } // Set element value\n  public Link next() { return n; }                // Return next link\n  public void setnext(Link inn) { n = inn; }      // Set next link\n}\n/* *** ODSAendTag: Link *** */\n\npublic class studentpntrequalspntrPROG {\n\npublic static void main(String [ ] args) {\n\n\nboolean SUCCESS = false;\n\n  Link studentsHead; \n  \n  studentsHead = reAssignPointer(); \n  \n  Link Mthird = new Link(3,null); \n  Link Msecond = new Link(2,Mthird); \n  Link Mfirst = new Link(1,Msecond); \n\t\n  Link Mp; \n  Link Mq; \n  Link Mr; \n\t\n  Mp = Mfirst;\n  Mq = Msecond;\n  \n  Mp = Mq;  \n  \n  if (Mp.element() == studentsHead.element()) SUCCESS = true;\n\n  try{\n\n  \n  PrintWriter output = new PrintWriter(\"output\", \"UTF-8\");\n\n\n   if (SUCCESS) { \n   \n     output.println(\"Well Done!\");\n     output.close();\n   }\n   else \n   {\n     output.println(\"Try Again! You have either disconnected your links or incorrectly reassigned the variable p.\");\n     output.close();\n      \n   }\n   \n  }\n  catch (IOException e) {\n\te.printStackTrace();\n  }\n\n\n}\n\npublic static boolean checkIfLinksLinked(Link front, Link middle, Link end){\n    \n    Object one = 1;\n    Object two = 2; \n    Object three = 3; \n    \n    boolean linkFlag = false; \n    \n    if(front.next() == middle) \n    {\n        if(middle.next() == end) \n        {\n            if(end.next () == null)\n            {\n                linkFlag = true; \n            }\n            else \n            {\n                linkFlag = false; \n            }\n        }\n        else \n        {\n            linkFlag = false; \n        }\n    }\n    else \n    {\n        linkFlag = false; \n    }\n    \n    return linkFlag; \n}\npublic static Link createList(int one, int two, int three) { \n    \n    Link tail = new Link(three,null); \n    Link next = new Link(two,tail); \n    Link head = new Link(one,next); \n    \n    return head; \n}\n\npublic static void startTraceNow()\n{\n  \n}\n public static Link reAssignPointer() {\t\n\tstartTraceNow();\t  \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\t \n\n\nLink p = createList(1,2,3);Link q = p.next();p = q;\t//if( checkIfLinksLinked(first,second,third) == true) \n\t//{\n\t//\treturnLink = p; \n\t//}\n\t//else \n\t//{\n\t//\treturnLink = r;\n\t//}\n\t//\n    endTraceNow();\n\treturn q; \n\t\n\t\n\t}\n    \n    public static void endTraceNow(){}\n\n}\n",
"options":{},
"args":[],
"stdin":""
}
